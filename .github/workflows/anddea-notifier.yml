name: Monitor Anddea Releases

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-releases:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check Anddea Repo for Releases
        id: check
        run: |
          LATEST_RELEASE=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/<anddea>/<revanced-patches>/releases?per_page=1 | jq -r '.[0].tag_name')

          if [ ! -f "last_release.txt" ] || [ "$(cat last_release.txt)" != "$LATEST_RELEASE" ]; then
            echo "New release found! Tag: $LATEST_RELEASE"
            echo "NEW_RELEASE=true" >> $GITHUB_ENV
            echo "RELEASE_NAME=$(curl -s -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/<anddea>/<revanced-patches>/releases?per_page=1 | jq -r '.[0].name')" >> $GITHUB_ENV
            echo "$LATEST_RELEASE" > last_release.txt
          else
            echo "No new releases."
            echo "NEW_RELEASE=false" >> $GITHUB_ENV
          fi

      - name: Commit Release File
        if: env.NEW_RELEASE == 'true'
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add last_release.txt
          git commit -m "Update last release" || echo "No changes to commit"
          git fetch origin main
          git reset --soft origin/main
          git push origin HEAD:main --force

      - name: Send Telegram Notification
        if: env.NEW_RELEASE == 'true'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.-1003016655194 }}
          token: ${{ secrets.8446073043:AAHDfXtShSd9a3dVVzYDC-HfNWOkqt_QVRk }}
          message: |
            ðŸ”” New release in Anddea/<revanced-patches>!
            Release: ${{ env.RELEASE_NAME }}
            Link: https://github.com/<anddea>/<revanced-patches>/releases
